- content_for :title do
  %title=@collection.web_title
- content_for :head do
  = fb_open_graph_metadata({:url => seo_url(@collection), :description => @collection.description_for_open_graph,
      :image => "http://spreadsong-book-covers.s3.amazonaws.com/book_id#{@featured_book.id}_size2.jpg",
      :title => @collection.name, :type => 'album' })
  %meta{:name => 'description', :content => @collection.description_for_open_graph}

#collection-page
  .collection-info
    - cache :action => 'show', :action_suffix => 'collection_details' do
      %h1
        =@collection.name
        Books
      %p=simple_format(parsed_collection_description(@collection.description))
  .featured-books
    .cover-here.medium
      .stable
        .spinner
    .cover-here.tiny
      .stable
        .spinner
    .cover-here.tiny
      .stable
        .spinner
    .cover-here.tiny
      .stable
        .spinner
  .book-list
    %h3 All #{@collection.name} Books
    %p.explanation.first Downloads on Classicly are completely free- these books public domain. 
    %p.explanation We donâ€™t pay a cent, so neither do you.

    .sorting
      %span Sort By:
      = link_to 'Most Downloaded', { :controller => 'books', :action => 'ajax_paginate', :id => @collection.id, :sort_by => 'downloaded_count'}, :class => 'selected', :name => 'sort_by_downloaded_count',  :remote => true
      = link_to 'Title', { :controller => 'books', :action => 'ajax_paginate', :id => @collection.id, :sort_by => 'title'}, :name => 'sort_by_title', :remote => true
      - unless @collection.is_author_collection? 
        = link_to 'Author', { :controller => 'books', :action => 'ajax_paginate', :id => @collection.id, 
            :sort_by => 'author'}, :name => 'sort_by_author', :remote => true
    .pagination
      = paginate @books, :params => {:controller => 'books', :action => 'ajax_paginate', :id => @collection.id} , :remote => true
    %ul.book-list
      = render :partial => '/books/listed_book', :collection => @books, :as => :book
    .pagination
      = paginate @books, :params => {:controller => 'books', :action => 'ajax_paginate', :id => @collection.id} , :remote => true
- if Rails.env.production?
  - if @collection.collection_type == 'author'
    = raw render_performable_script(:author)
  - else
    = raw render_performable_script(:collection)
