- content_for :title do
  %title=seo_front_end_title_helper(@collection)

- content_for :head do
  = fb_open_graph_metadata({:url => seo_url(@collection), :description => seo_front_end_meta_description_text(@collection),
      :image => "http://spreadsong-book-covers.s3.amazonaws.com/book_id#{@featured_book.id}_size2.jpg",
      :title => @collection.name, :type => 'album' }, @collection.seo_info)
  = content_tag :meta, nil, :name => 'description', :content => seo_front_end_meta_description_text(@collection)

#collection-page
  - if @collection.has_audiobook_counterpart?
    .audiobook-switcher  
      %span Books |&nbsp;
      = link_to 'Audiobooks', seo_url(@collection.audiobook_collection_slug)
      .tooltip
        Check out our audiobook titles for this collection!
  .collection-info
    %h1
      =@collection.name
      Books

    %p=simple_format(@collection.parsed_description)
    .share
      <fb:like show_faces="true" send="true" width="600" send="true" font="arial" action='recommend'></fb:like>

  .featured-books.audiobooks
    .cover.medium
      = cover_image_link(@collection.featured_book, 2)

  - if @collection.is_author_collection? && @collection.has_author?
    .author-quotations
      - for quotation in @collection.author.author_quotings
        %h5
          = link_to quotation.quoted_text, quotation.blog_post.cached_slug
      
  .book-list
    %h3 All #{@collection.name} Books
    %p.explanation.first Downloads on Classicly are completely free- these books are public domain. 
    %p.explanation We donâ€™t pay a cent, so neither do you.

    .sorting
      %span Sort By:
      = sort_books_ajax_link @collection.id, 'Most Downloaded', 'downloaded_count'
      = sort_books_ajax_link @collection.id, 'Title', 'title'
      -# sorting by author an author collection is pointless
      - unless @collection.is_author_collection?
        = sort_books_ajax_link @collection.id, 'Author', 'author' 
    %ul.book-list
      = render :partial => '/books/listed_book', :collection => @books, :as => :book
    .pagination
      = paginate @books, {:controller => 'seo', :action => 'show', :id => @seo.slug}
- if Rails.env.production?
  - if @collection.collection_type == 'author'
    = raw render_performable_script(:author)
  - else
    = raw render_performable_script(:collection)
