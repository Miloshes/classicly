- content_for :title do
  %title=@collection.web_title

- content_for :head do
  = fb_open_graph_metadata({:url => seo_url(@collection), :description => @collection.description_for_open_graph,
      :image => "http://spreadsong-book-covers.s3.amazonaws.com/book_id#{@featured_book.id}_size2.jpg",
      :title => @collection.name, :type => 'album' })
  %meta{:name => 'description', :content => @collection.description_for_open_graph}

#collection-page
  .collection-info
    %h1
      =@collection.name
      Books
    %p=simple_format(parsed_collection_description(@collection.description))
  -# Warning. Don't change name attribute below , please ask Nacho:
  .featured-books{:name => "collection_#{@collection.id}"}
    .cover-here.medium
      .stable
        .spinner
    .cover-here.tiny
      .stable
        .spinner
    .cover-here.tiny
      .stable
        .spinner
    .cover-here.tiny
      .stable
        .spinner
  .book-list
    %h3 All #{@collection.name} Books
    %p.explanation.first Downloads on Classicly are completely free- these books public domain. 
    %p.explanation We donâ€™t pay a cent, so neither do you.

    .sorting
      %span Sort By:
      = sort_books_ajax_link @collection.id, 'Most Downloaded', 'downloaded_count'
      = sort_books_ajax_link @collection.id, 'Title', 'title'
      -# sorting by author an author collection is pointless
      - unless @collection.is_author_collection?
        = sort_books_ajax_link @collection.id, 'Author', 'author' 
    %ul.book-list
      = render :partial => '/books/listed_book', :collection => @books, :as => :book
    .pagination
      = paginate @books, :params => {:controller => 'books', :action => 'ajax_paginate', :id => @collection.id} , :remote => true
- if Rails.env.production?
  - if @collection.collection_type == 'author'
    = raw render_performable_script(:author)
  - else
    = raw render_performable_script(:collection)

= javascript_include_tag 'covers-collection-detail-page'
